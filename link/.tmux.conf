# terminal options
set -g default-shell /bin/zsh
set -g default-terminal "screen-256color"
set -ga terminal-overrides "screen-256color:Tc"

# mouse
set -g mouse on

# Disable set titles
set -g set-titles off

# disable escape key
set -g escape-time 0

# increase scrollback buffer size
set -g history-limit 100000

# display tmux messages for x seconds
set -g display-time 5000

# refresh the statusbar every x seconds
set -g status-interval 30

# focus events enabled for terminals that support them
set -g focus-events on

# super useful when using "grouped sessions" in a multi monitor setup
setw -g aggressive-resize on


#============================
# KEY BINDINGS
#============================
# change prefix binding
unbind C-b
set -g prefix C-a

# switch panes using Alt-arrow without prefix
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind J swap-window -t -1
bind K swap-window -t +1
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind l select-pane -R
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
# bind J swap-window -t -1
# bind K swap-window -t +1
# bind H previous-window
# bind L next-window

# Window Selection
#:bind-key w resize-pane -Z \; choose-tree "resize-pane -Z \; select-window -t '%%'"

# Function keys.
bind -T root F11 choose-window
bind -T root C-9 previous-window
bind -T root C-0 next-window
bind -T root C-S-9 swap-window -t -1
bind -T root C-S-0 swap-window -t +1


# override default window splitting
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

#============================
# COPY MODE
#============================
# vi
set -g status-keys vi
set -g mode-keys vi
# override copy and pasting
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# Copy selected text (YANK MODE) {
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
# }

# reload
bind r source-file ~/.tmux.conf

#============================
# THEME
#============================
# Color Definitions
dark0_hard=colour234
dark0=colour235
dark0_soft=colour236
dark1=colour237
dark2=colour239
dark3=colour241
dark4=colour243
dark4_256=colour243

gray_245=colour245
gray_244=colour244

light0_hard=colour230
light0=colour229
light0_soft=colour228
light1=colour223
light2=colour250
light3=colour248
light4=colour246
light4_256=colour246

bright_red=colour167
bright_green=colour142
bright_yellow=colour214
bright_blue=colour109
bright_purple=colour175
bright_aqua=colour108
bright_orange=colour208

neutral_red=colour124
neutral_green=colour106
neutral_yellow=colour172
neutral_blue=colour66
neutral_purple=colour132
neutral_aqua=colour72
neutral_orange=colour166

faded_red=colour88
faded_green=colour100
faded_yellow=colour136
faded_blue=colour24
faded_purple=colour96
faded_aqua=colour66
faded_orange=colour130

# Initializing tmux-gitbar - no idea why this has to be at the bottom
# source-file "$HOME/.tmux-gitbar/tmux-gitbar.tmux"
# ^ commented out, can't figure out how to get it to work with xterm

# Conditional loading of different files
if-shell "uname | grep -q Darwin" "source-file ~/.tmux-osx.conf"
if-shell "uname | grep -q Linux" "source-file ~/.tmux-linux.conf"

# Conditional SSH
if-shell 'test -n "$SSH_CLIENT"' \
   'source-file ~/.tmux-remote.conf'

# Change when the window is inactive
bind -T root F12  \
  set prefix None \;\
  set key-table off \;\
  set status-style 'fg=colour236, bg=colour234' \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S

wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"

#============================
# TMUX PLUGINS
#============================
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-logging'

# Initializing tpm
run '~/.tmux/plugins/tpm/tpm'
