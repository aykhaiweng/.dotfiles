#!/bin/bash

# @author Au Yeong Khai Weng
# @date 05.02.2020

# This is a script that I have stolen from https://github.com/aalto-ics-kepaco/fswatch-rsync/
# and repurposed with the ability to specify commands instead of piping into rsync directly

################################################################################

PROJECT="fswatch-rsync"
VERSION="0.1a"
FSWATCH_PATH="fswatch"

# check color support
colors=$(tput colors)
if (($colors >= 8)); then
    red='\033[0;31m'
    green='\033[0;32m'
    nocolor='\033[00m'
else
  red=
  green=
  nocolor=
fi

# Welcome
echo      ""
echo -e   "${green}Hey! This is $PROJECT v$VERSION.${nocolor}"
echo      ""
echo -n   "Performing initial complete synchronization "
echo -n   "(Warning: Target directory will be overwritten "
echo      "with local version if differences occur)."

# Perform initial complete sync
read -n1 -r -p "Press any key to continue (or abort with Ctrl-C)... " key
echo      ""
echo -n   "Synchronizing... "

python3 ~/.dotfiles/scripts/rsyncwrapper.py

echo      "done."
echo      ""

# Watch for changes and sync (exclude hidden files)
echo    "Watching for changes. Quit anytime with Ctrl-C."
${FSWATCH_PATH} -0 -r . -l 1 -o\
    --exclude="/\.[^/]*$" --exclude="4913" --exclude=".git" --exclude=".undodir"\
    --exclude="*.vim" --exclude="workspace.vim" --exclude="volumes/database"\
    | while read -d "" event
do
    echo -en "${green}" `date` "${nocolor}\"$event\" changed. Synchronizing... "
    python3 ~/.dotfiles/scripts/rsyncwrapper.py
    echo "done."
done
